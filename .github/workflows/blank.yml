# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  # Test job
  test:
    # Runs a set of commands using the runners shell
    name: Test (PHP ${{ matrix.os }} - ${{ matrix.php-versions }})
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      # Avoids break if one part of matrix go wrong
      fail-fast: true
      # Several env strategies
      matrix:
        os: [macos-latest, windows-latest, ubuntu-18.04]
        php-versions: ['7.2', '7.4']
        exclude:
          # excludes node 4 on macOS
          - os: windows-latest
            php-versions: '7.2'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Get dependency images
      - name: Pull images
        run: docker-compose pull
      # Start containers
      - name: Start services
        run: docker-compose up --build -d
#      # Runs a single command using the runners shell
#      - name: Setup PHP
#        run: php -v
#      - name: Validate composer files
#          run: composer validate --no-check-all --strict
#      - name: Install Composer dependencies
#        run: composer install --prefer-dist --no-progress --no-suggest